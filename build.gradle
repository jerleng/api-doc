buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.8.2"
    }
}

version "3.0.0-SNAPSHOT"
group "com.bertramlabs"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"org.grails.grails-plugin"
apply plugin:"org.grails.grails-plugin-publish"
apply plugin:"org.grails.grails-gsp"
apply plugin:"asset-pipeline"

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
}

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-dependencies"
    compile "org.grails:grails-web-boot"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:scaffolding"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web-plugin"
    provided "org.grails:grails-plugin-services"
    provided "org.grails:grails-plugin-domain-class"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.8.2"
    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails.plugins:geb"
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"
}

/*
bintray {
    publications = ['maven']
    pkg {
        githubRepo = 'jerleng/grails-api-doc' //Optional Github repository
        githubReleaseNotesFile = 'Readme.md' //Optional Github readme file
        repo = 'grails3-plugins'
        userOrg = 'bertramlabs'
        licenses = ['Apache-2.0']
    }
}

grailsPublish {
    if(project.hasProperty('bintrayUser')) {
        user = bintrayUser
        key = bintrayKey
    }
    userOrg = 'bertramlabs'
    githubSlug = 'jerleng/grails-api-doc'
    license {
        name = 'Apache-2.0'
    }
    title = "API Documentation Web Site"
    desc = "Generate an integract documentation web site based on annotations or JSON"
    developers = [bdwheeler: "Brian Wheeler", jsaardchit: "Jordon Saardchit", davidestes:"David Estes", jleng: "Jeremy Leng"]
}
*/

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url "http://nexus.bertramlabs.com/content/repositories/publicSnapshots"
            if(gradle.ext.labsNexusUser) {
                credentials {
                    username = gradle.ext.labsNexusUser
                    password = gradle.ext.labsNexusPassword
                }
            }
        }
    }
}
grailsPublish {
    // TODO: Provide values here
    user = 'user'
    key = 'key'
    githubSlug = 'jerleng/grails-api-doc'
    license {
        name = 'Apache-2.0'
    }
    title = "API Documentation Web Site"
    desc = "Generate an integract documentation web site based on annotations or JSON"
    developers = [jerleng: "Jeremy Leng"]
    portalUser = ""
    portalPassword = ""    
}

assets {
    packagePlugin = true
}

bootRun {
    addResources = true
}